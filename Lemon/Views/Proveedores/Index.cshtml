@using X.PagedList
@model X.PagedList.IPagedList<Lemon.Models.Proveedor>

<link rel="stylesheet" href="~/css/Proveedores/index.css">
<link rel="stylesheet" href="~/css/tablas.css">

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Proveedor";
}
<div class="topProveedores mt-2 pb-2" style="background-color: white;">

    <div class="col-md-3 col-11 d-flex justify-content-center">
        <a asp-action="Create" type="button" class="btn btn-outline-dark btn-success text-white">Registrar proveedor <i class=" fa-solid fa-plus fa-lg" style="color: #ffffff;"></i></a>
    </div>
    <div class="col-md-6 col-11 mt-md-0 mt-2">
        <div class="input-group">
            <input id="buscarProveedor" type="text" class="form-control" placeholder="Buscar proveedor" aria-label="Search" aria-describedby="button-addon2">
            <button class="btn btn-outline-secondary" onclick="vaciarInput()" type="button" id="button-addon2"><i class="fa-solid fa-magnifying-glass fa-2xl" style="color: gray; font-size:30px;"></i></button>
        </div>
    </div>
    <div class="col-md-3 col-11 d-flex justify-content-center mt-md-0 mt-2">
        <a asp-action="GenerarPdf" style="background:#ebebeb;" type="button" class="btn btn-outline-dark "><i class="fa-solid fa-file-pdf fa-xl" style="color: #000000;"></i></a>
    </div>
</div>

<article class="col-12 " style="overflow-x:auto; background:white; height:325px;">
    <div  class="mt-2 border border-color-black ms-2 me-2" style="border-radius:10px; min-width:1100px;">
        <table class="mb-2 col-12" style="text-align:center;">
            <thead>
                <tr>
                   @*  <th>IdProveedor</th> *@
                    <th>Tipo documento</th>
                    <th>Documento</th>
                    <th>Nombre</th>
                    <th>Correo</th>
                    <th>Teléfono</th>
                    <th colspan="3">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="proveedoresPaginado">
                        @* <td>
                            @Html.DisplayFor(modelItem => item.IdProveedor)
                        </td> *@
                        <td>
                            @Html.DisplayFor(modelItem => item.TipoDocumento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Documento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NombreRazonSocial)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Correo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Telefono)
                        </td>
                        <td class="px-3 border-0 pegarDerecha">
                            <a asp-action="Update" asp-route-id="@item.IdProveedor"><i id="Icono" class="fa-solid fa-pen"></i></a>
                        </td>
                        <td class="px-3 border-0 pegarCentro">
                            <label class="switch">
                                <input id="@item.IdProveedor " type="checkbox" @(item.Estado == 1 ? "checked" : "") onchange="cambiarEstado(this)">
                                <span class="slider"></span>
                            </label>
                        </td>
                        <td class="px-3 border-0 pegarIzquierda">
                            <a onclick="eliminarProveedor(@item.IdProveedor)"><i class="fa-solid fa-trash"></i></a>
                        </td>
                    </tr>
                }
                 @{
                    var proveedores = ViewData["Proveedores"] as List<Proveedor>;
                    if (proveedores != null)
                    {
                        foreach (var pro in proveedores)
                        {
                            <tr class="ProveedoresTodos" style="display:none;">
                                <td>@pro.TipoDocumento</td>
                                <td>@pro.Documento</td>
                                <td>@pro.NombreRazonSocial</td>
                                <td>@pro.Correo</td>
                                <td>@pro.Telefono</td>
                                <td class="px-3 border-0 pegarDerecha">
                                    <a asp-action="Update" asp-route-id="@pro.IdProveedor"><i id="Icono" class="fa-solid fa-pen"></i></a>
                                </td>
                                <td class="px-3 border-0 pegarCentro">
                                    <label class="switch">
                                        <input id="@pro.IdProveedor" type="checkbox" @(pro.Estado == 1 ? "checked" : "") onchange="cambiarEstado(this)">
                                        <span class="slider"></span>
                                    </label>
                                </td>
                                <td class="px-3 border-0 pegarIzquierda">
                                    <a style="cursor:pointer;" onclick="eliminarCliente(@pro.IdProveedor)"><i class="fa-solid fa-trash"></i></a>
                                </td>
                            </tr>
                        }
                    }
                } 
            </tbody>
        </table>
    </div>
</article>
   <div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation bg-dark">
                <ul class="pagination">

                    <!-- Botón para la página anterior (oculto en la página 1) -->
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    <!-- Iterar sobre las páginas disponibles -->
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }

                    <!-- Botón para la página siguiente (oculto en la última página) -->
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>

                </ul>
            </nav>
        </div> 
    }
    </div>

<script src="~/js/Proveedores/index.js"></script>



